(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{232:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return l})),r.d(t,"default",(function(){return s}));var n=r(1),a=r(9),i=(r(0),r(252)),o={id:"rest",title:"Rest Intro",sidebar_label:"Rest Intro"},c={id:"basics/rest",title:"Rest Intro",description:"[![docs-source](https://img.shields.io/badge/source-eigthshift--libs-blue?style=for-the-badge&logo=php&labelColor=2a2a2a)](https://github.com/infinum/eightshift-libs)",source:"@site/docs/basics/rest.md",permalink:"/eightshift-docs/docs/basics/rest",sidebar_label:"Rest Intro",sidebar:"docs",previous:{title:"Manifest",permalink:"/eightshift-docs/docs/basics/manifest"},next:{title:"Rest Field",permalink:"/eightshift-docs/docs/basics/rest-field"}},l=[{value:"CallableFieldInterface.php",id:"callablefieldinterfacephp",children:[]},{value:"CallableRouteInterface.php",id:"callablerouteinterfacephp",children:[]},{value:"RouteSecurityInterface.php",id:"routesecurityinterfacephp",children:[]},{value:"RouteInterface.php",id:"routeinterfacephp",children:[]},{value:"AbstractField.php",id:"abstractfieldphp",children:[]},{value:"AbstractRoute.php",id:"abstractroutephp",children:[]}],p={rightToc:l};function s(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/infinum/eightshift-libs"}),Object(i.b)("img",Object(n.a)({parentName:"a"},{src:"https://img.shields.io/badge/source-eigthshift--libs-blue?style=for-the-badge&logo=php&labelColor=2a2a2a",alt:"docs-source"})))),Object(i.b)("p",null,"Depending on the type of projects you are working on, you might need to create a new REST API route or add a new API field to the existing route."),Object(i.b)("p",null,"We have prepared four interfaces and two abstract classes for you."),Object(i.b)("p",null,"In general, you will use only what you need from the provided options."),Object(i.b)("h2",{id:"callablefieldinterfacephp"},"CallableFieldInterface.php"),Object(i.b)("p",null,"The interface used in Rest API Field for providing callback method."),Object(i.b)("h2",{id:"callablerouteinterfacephp"},"CallableRouteInterface.php"),Object(i.b)("p",null,"The interface used in Rest API Route for providing callback method."),Object(i.b)("h2",{id:"routesecurityinterfacephp"},"RouteSecurityInterface.php"),Object(i.b)("p",null,"The interface used in Rest API Route for providing authentication methods."),Object(i.b)("h2",{id:"routeinterfacephp"},"RouteInterface.php"),Object(i.b)("p",null,"The interface used in Rest API Route for providing general options for your route like variables for ",Object(i.b)("inlineCode",{parentName:"p"},"READABLE"),", ",Object(i.b)("inlineCode",{parentName:"p"},"CREATABLE"),", etc..."),Object(i.b)("h2",{id:"abstractfieldphp"},"AbstractField.php"),Object(i.b)("p",null,"Abstract class used in Rest API Field for updating existing fields or providing a new field to the existing Rest API."),Object(i.b)("p",null,"Please check the implementation details in ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"rest-field"}),"this example"),"."),Object(i.b)("h2",{id:"abstractroutephp"},"AbstractRoute.php"),Object(i.b)("p",null,"Abstract class used in Rest API Route for adding a new Rest API route."),Object(i.b)("p",null,"Please check the implementation details in ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"rest-route"}),"this example"),"."))}s.isMDXComponent=!0},252:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return f}));var n=r(0),a=r.n(n);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=a.a.createContext({}),s=function(e){var t=a.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):c({},t,{},e)),r},u=function(e){var t=s(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=Object(n.forwardRef)((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(r),d=n,f=u["".concat(o,".").concat(d)]||u[d]||b[d]||i;return r?a.a.createElement(f,c({ref:t},p,{components:r})):a.a.createElement(f,c({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var p=2;p<i;p++)o[p]=r[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);